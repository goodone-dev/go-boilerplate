services:
  postgres:
    networks:
      - backend
    image: postgres:18-alpine
    environment:
      POSTGRES_DB: goodmart-db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d goodmart-db -U user" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  redis:
    networks:
      - backend
    image: redis:8-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always

  rabbitmq:
    networks:
      - backend
    image: rabbitmq:3.13-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  mailpit:
    networks:
      - backend
    image: axllent/mailpit:v1.27.9
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    restart: always

  jaeger:
    networks:
      backend:
        # This is the host name used in Prometheus scrape configuration.
        aliases: [ spm_metrics_source ]
    image: jaegertracing/jaeger:2.11.0
    environment:
      COLLECTOR_ZIPKIN_HOST_PORT: :9411
    ports:
      - "16686:16686" # Web UI
      - "4318:4318" # Exporter
      - "8888:8888"
      - "8889:8889" # Metric
    volumes:
      - "./jaeger.yaml:/etc/jaeger/config.yml"
    command: ["--config", "/etc/jaeger/config.yml"]
    restart: always

  microsim:
    networks:
      - backend
    image: yurishkuro/microsim:v0.5.0
    command: "-d 24h -s 500ms"
    environment:
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://jaeger:4318/v1/traces
    depends_on:
      - jaeger

  prometheus:
    networks:
      - backend
    image: prom/prometheus:v3.6.0
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    restart: always

  app:
    networks:
      - backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      APP_NAME: goodmart-api
      APP_PORT: 8080
      APP_ENV: local
      APP_URL: http://localhost:8080
      POSTGRES_HOST: postgres
      POSTGRES_USERNAME: user
      POSTGRES_PASSWORD: password
      POSTGRES_PORT: 5432
      POSTGRES_SSL_MODE: disable
      POSTGRES_DATABASE: goodmart-db
      POSTGRES_AUTO_MIGRATE: true
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_TLS: false
      REDIS_PASSWORD: 
      REDIS_DB: 0
      MAIL_HOST: mailpit
      MAIL_PORT: 1025
      MAIL_USERNAME: no-reply@goodmart.com
      MAIL_PASSWORD: ''
      MAIL_TLS: false
      JAEGER_HOST: jaeger
      JAEGER_PORT: 4318
      JAEGER_SERVICE_NAME: goodmart-api
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
      RABBITMQ_VHOST: /
      RABBITMQ_POOL_SIZE: 10
      RABBITMQ_MAX_RETRY: 3
      RABBITMQ_RETRY_DELAY: 5
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - mailpit
      - jaeger

networks:
  backend:

volumes:
  postgres-data:
  redis_data:
  rabbitmq_data: